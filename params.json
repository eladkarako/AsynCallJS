{"name":"AsynCallJS","tagline":"JavaScript's Easiest Async-Run Support For Methods. It Makes All Of Your Methods Magically Support Async-Execution, No Fuss.","body":"# AsynCallJS\r\n## JavaScript's Easiest Async-Run Support For Methods.\r\n#### It's Easy As <img src=\"https://i.imgur.com/nupHZdW.png\" alt=\"pie\"/>\r\n\r\n    /* AsynCallJS 1.3.5 - JavaScript's Easiest Async-Run Support For Methods.\r\n     * https://github.com/eladkarako/AsynCallJS/\r\n     *\r\n     * Copyright (c) 2015 Elad Karako (eladkarako.com)\r\n     * Dual licensed under the MIT (MIT-LICENSE.txt)\r\n     * and GPL (GPL-LICENSE.txt) licenses.\r\n     */\r\n\r\n#####It Makes All Of Your Methods Magically Support Async-Execution <img src=\"https://i.imgur.com/ISy881a.png\" alt=\"\"/>, No Fuss.\r\n###<img src=\"https://i.imgur.com/jCAWARC.png\" alt=\"\"/> Example First\r\n    function sqr(n) {\r\n      return Math.pow(n, 2);\r\n    }\r\n\r\n    sqr.asyncall_callback = function (result, args) {\r\n      console.log(\"parameters used:\", args);\r\n      console.log(\"result:\", result);\r\n    };\r\n\r\n    sqr.asyncall(5);\r\n    \r\n    //output #1:  \"parameters used:\" [5]\r\n    //output #2:  \"result:\" 25\r\n<hr/>\r\n\r\n###<img src=\"https://i.imgur.com/aB2Ug86.png\" alt=\"\"/>Async Run? Why And How?\r\n - running methods that modify the presentation, is long descited would be best practice run-from a context-free timer,\r\n - although `setTimeout` does not implemented `Threading` it is not intended to (in my implementation, at least).\r\n - adding a simple-enough wrap for **each** function, providing a clear, promise-like code-writing,\r\n - you can find numerous reasons why you should use `AsynCall` logic,\r\n\r\n<hr/>\r\n\r\n###<img src=\"https://i.imgur.com/3Cgm5bd.png\" alt=\"think!\" title=\"think!\"/>AsynCallJS Solves This Complex Usecase With Prototypes And Callbacks!\r\n - *first* is the simplicity\r\n - *second* is that all of your methods are now async-capable, out-of-the-box, and requires no modification.\r\n - *third* is the asynchronous \"done callback\", and the flat, easy to use design-patten.\r\n - *fourth*: AsynCallJS [avoids-the-callback-hell scenario](http://callbackhell.com/) <br/>\r\n<img src=\"https://i.imgur.com/6HEwGff.gif\" alt=\"no callback hell!\" title=\"no callback hell!\" style=\"text-align:center;\"/>\r\n\r\n<hr/>\r\n\r\n###<img src=\"https://i.imgur.com/8J8aUkr.png\" title=\"help! superman! oh wait nevermind I've got this baseball bat..##BOOM## owwwwwww :..(\" alt=\"help! superman! oh wait nevermind I've got this baseball bat..##BOOM## owwwwwww :..(\"/>How Can *I* Make AsynCallJS Better?\r\n - Share, Fork <img src=\"https://i.imgur.com/Jwn2fGl.png\" alt=\"mmmm... fork...no.. wait...!\" title=\"mmmm... fork...no.. wait...!\"/>, Comment, EMail, Commit (not necessarily in that order..)\r\n - <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=7994YX29444PA&lc=IL&item_name=GitHub%20AsynCall%2eJS%20Donation&amount=5%2e00&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted\"><img src=\"https://i.imgur.com/ilcj8Ij.png?1\" alt=\"donate\" /></a> - it will help you sleep better at night, seriously!\r\n\r\n<hr/>\r\n\r\n-  thanks for using for free/fork'ing/donating for the project.\r\n-  live long and prosper.\r\n<br/><img src=\"https://i.imgur.com/4KFKvH2.png\" alt=\"Yeah!!!\" title=\"Yeah!!!\"/>\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}